    *

// rubbr blockfile

// define custom blocks
!break
    init
        {
            return Block('span').add('br');
        }
    load
        {
            data('val', function (val) {
                for (var i = 1; i < val; i++)
                    block.add('br');
            });
        }
!text
    init
        {
            return Block('span');
        }
    load
        {
            data('val', function (val) {
                block.node().appendChild(document.createTextNode(val));
            });
            data('html', function (html) {
                block.html(html);
            });
        }
!image
    init
        {
            return Block('div');
        }
    load
        {
            var src = data('src');
            var height = data('height');
            var width = data('width');
            var alt = data('alt');
            if (src != null) {
                block.css('background-image', "url('" + src + "')")
                    .css('background-repeat', 'no-repeat')
                    .css('background-size', 'contain')
                ;
            }
            if (height !== null) block.css('height', height);
            else block.css('height', 'auto');
            if (width !== null) block.css('width', width);
            else block.css('width', 'auto');
            if (alt !== null) block.attribute('title', alt);
        }
// app UI content layer
app
    css
        opacity 0
        transition opacity 0.4s
        height 100%
        width 100%
        overflow hidden
    canvas canvas
        css
            background-color #151515
            cursor crosshair
        @query window width != 0
            {
                block.data({
                    width: window.innerWidth + 'px',
                    height: window.innerHeight + 'px'
                });
            }
    block overlays
        css
            display none
        block overlay-health
            css
                position absolute
                bottom 25px
                width 75%
                height 35px
                left 0
                max-width 400px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
            @query window width != 0
                {
                    block.css('left', (window.innerWidth / 2 - block.$().width() / 2) + 'px');
                }
            div health
                css
                    width 97%
                    height 65%
                    border-radius 1px
                    background-color rgba(120, 40, 40, 0.8)
                    margin 0 auto
                    transition width 0.1s ease
            #health
                {
                    block.child('health').css('width', (health * 0.97) + '%');
                }
        block overlay-money
            css
                position absolute
                bottom 25px
                width auto
                height 35px
                left 35px
                min-width 80px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
                padding 0 4px 0 4px
                transition background-color 0.15s ease
            @query window width != 0
                {
                    block.css('left', (window.innerWidth / 2 - block.sibling('overlay-health').$().width() / 2 - block.$().width() - 20) + 'px');
                }
            text money
                val $0
                css
                    color rgba(255, 255, 255, 0.8)
                    font-size 16px
                    font-weight bold
                    font-family Trebuchet, Verdana, Helvetica, Arial, sans-serif
            $value 0
            #money
                {
                    block.child('money').html('').data('$' + money);
                    if (block.key('value') > money) block.on('flash', { color: 'red' });
                    else if (block.key('value') < money) block.on('flash', { color: 'green' });
                    block.key('value', money);
                }
            $flash off
            :flash
                {
                    if (block.key('flash') == 'off' || data.color == 'red') {
                        block.key('flash', 'on');
                        var bg = block.css('background-color');
                        if (data.color == 'green') block.css('background-color', 'rgba(42, 92, 42, 0.7)');
                        else if (data.color == 'red') block.css('background-color', 'rgba(92, 42, 42, 0.7)');
                        else if (data.color == 'white') block.css('background-color', 'rgba(230, 230, 230, 0.6)');
                        setTimeout(function () {
                            block.css('background-color', bg);
                            block.key('flash', 'off');
                        }, 200);
                    }
                }
        block overlay-kills
            css
                position absolute
                bottom 25px
                width auto
                height 35px
                right 35px
                min-width 80px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
                padding 0 4px 0 4px
                transition background-color 0.3s ease
            @query window width != 0
                {
                    block.css('right', (window.innerWidth / 2 - block.sibling('overlay-health').$().width() / 2 - block.$().width() - 20) + 'px');
                }
            text kills
                val 0 kills
                css
                    color rgba(255, 255, 255, 0.8)
                    font-size 16px
                    font-weight bold
                    font-family Trebuchet, Verdana, Helvetica, Arial, sans-serif
            $value 0
            #kills
                {
                    block.child('kills').html('').data(kills + ' ' + (kills == 1 ? 'kill' : 'kills'));
                    if (block.key('value') > kills) block.on('flash', { color: 'red' });
                    else if (block.key('value') < kills) block.on('flash', { color: 'green' });
                    block.key('value', kills);
                }
            $flash off
            :flash
                {
                    if (block.key('flash') == 'off' || data.color == 'red') {
                        block.key('flash', 'on');
                        var bg = block.css('background-color');
                        if (data.color == 'green') block.css('background-color', 'rgba(42, 92, 42, 0.7)');
                        else if (data.color == 'red') block.css('background-color', 'rgba(92, 42, 42, 0.7)');
                        else if (data.color == 'white') block.css('background-color', 'rgba(230, 230, 230, 0.6)');
                        setTimeout(function () {
                            block.css('background-color', bg);
                            block.key('flash', 'off');
                        }, 500);
                    }
                }
        div overlay-rankings
            class overlay
            css
                position absolute
                top 25px
                min-height 100px
                min-width 100px
                width auto
                height auto
                right 30px
                background-color rgba(2, 2, 2, 0.6)
                border-radius 2px
                padding 6px 20px 10px
                transition background-color 0.3s ease
                text-align left
            text title
                val leaderboard
                css
                    color #ddd
                    font-size 20px
                    font-weight bold
                    // text-decoration underline
            div spacer
                css
                    height 2px
            text rankings
                html &nbsp;
                css
                    color #ddd
                    font-size 16px
                    text-align left
            :display
                {
                    var rankings = data.rankings;
                    var html = '';
                    var i = 1;
                    for (var user in rankings) {
                        if (i == 6) break;
                        html += i + '.&nbsp;&nbsp;' + rankings[user]['name'] + '<br/>';
                        i++;
                    }
                    block.child('rankings').html(html);
                }
    block intro
        css
            top 0
            left 0
            right 0
            bottom 0
            position absolute
            display table
        div div
            css
                width 400px
                min-height 400px
                height auto
                background-color #1c1c1c
                border-radius 12px
                margin 0 auto
                padding-top 40px
            text title
                val rubbr
                css
                    color #ddd
                    font-size 70px
            div links
                css
                    margin 10px auto 25px
                div github
                    css
                        display inline-block
                        margin 10px 15px
                        cursor pointer
                        opacity 0.6
                        transition opacity 0.2s ease
                    a link
                        href https://github.com/anuvgupta/rubbr
                        target _blank
                        image img
                            height 50px
                            width 50px
                            src img/github-white.png
                    :mouseover
                        css
                            opacity 0.8
                    :mouseout
                        css
                            opacity 0.6
                div help
                    css
                        display inline-block
                        margin 10px 15px
                        cursor pointer
                        opacity 0.6
                        transition opacity 0.2s ease
                    image img
                        height 50px
                        width 50px
                        src img/help-white.png
                    :mouseover
                        css
                            opacity 0.8
                    :mouseout
                        css
                            opacity 0.6
                    :click
                        {
                            app.block.child('modal').on('show');
                        }
            input username
                placeholder username
                css
                    border-radius 5px
                    outline none
                    border none
                    padding 14px 20px
                    font-size 24px
                    text-align center
                    background-color #333
                    color #eee
                :focus
                    css
                        text-align left
                :blur
                    css
                        text-align center
                :keyup
                    {
                        if (event.keyCode == 13) {
                            block.sibling('join').on('click');
                        }
                    }
            block join
                text text
                    val join
                    css
                        color #eee
                        font-size 23px
                css
                    text-align center
                    height 58px
                    width 252px
                    margin 15px auto 5px
                    border-radius 5px
                    opacity 0.82
                    background-color rgb(70, 143, 72)
                    transition background-color 0.2s ease, opacity 0.2s ease
                    cursor pointer
                :mouseover
                    css
                        background-color rgb(70, 143, 72)
                        opacity 0.95
                :mouseout
                    css
                        background-color rgb(70, 143, 72)
                        opacity 0.82
                :click
                    {
                        if (app.socket.connected) {
                            var val = block.sibling('username').node().value;
                            if (!Block.is.unset(val) && Block.is.str(val) && val.trim() != '') {
                                app.socket.emit('login', val, false);
                            }
                        }
                    }
            div message
                text text
                    val an error occurred
                    css
                        font-size 20px
                        color rgb(132, 48, 48)
                css
                    opacity 0
                    transition opacity 0.2s ease
                :revalue
                    {
                        block.child('text').html('').data(data.value);
                        block.on('show');
                        setTimeout(function () {
                            block.on('hide');
                        }, 8000);
                    }
                :show
                    css
                        opacity 0.9
                :hide
                    css
                        opacity 0
        :msg
            {
                block.child('div/message/text').html('').html(data.msg);
            }
    block dead
        css
            top 0
            left 0
            right 0
            bottom 0
            position absolute
            display none
        :msg
            {
                block.child('div/message').html('').html(data.msg);
            }
        div div
            css
                width 400px
                min-height 320px
                height auto
                background-color #1c1c1c
                border-radius 12px
                margin 0 auto
                padding-top 40px
            text title
                val DEAD
                css
                    color #ddd
                    font-size 70px
            div spacer
                css
                    height 20px
            text message
                val you ran out of health
                css
                    color #ddd
                    font-size 20px
            block rejoin
                text text
                    val play again
                    css
                        color #eee
                        font-size 23px
                css
                    text-align center
                    height 58px
                    width 252px
                    margin 35px auto 5px
                    border-radius 5px
                    opacity 0.82
                    background-color rgb(70, 143, 72)
                    transition background-color 0.2s ease, opacity 0.2s ease
                    cursor pointer
                :mouseover
                    css
                        background-color rgb(70, 143, 72)
                        opacity 0.95
                :mouseout
                    css
                        background-color rgb(70, 143, 72)
                        opacity 0.82
                :click
                    {
                        if (app.socket.connected) {
                            var val = app.objects.player.n;
                            if (!Block.is.unset(val) && Block.is.str(val) && val.trim() != '') {
                                app.socket.emit('login', val, true);
                            }
                        }
                    }
    block modal
        css
            position fixed
            top 0
            bottom 0
            left 0
            right 0
            z-index 5
            display none
            opacity 0
            background-color rgba(20, 20, 20, 0.6)
            transition opacity 0.3s ease
        :click
            {
                block.on('hide');
            }
        :hide
            {
                block.css('opacity', '0');
                setTimeout(function () {
                    block.css('display', 'none');
                }, 300);
            }
        :show
            {
                block.css('display', 'table');
                setTimeout(function () {
                    block.css('opacity', '1');
                }, 10);
            }
        div help
            css
                margin 0 auto
                border-radius 7px
                height 75%
                width 90%
                position relative
                max-width 530px
                max-height 650px
                background-color #1c1c1c
                border-bottom 15px solid #1c1c1c
                border-top 5px solid #1c1c1c
                overflow-y scroll
                -webkit-overflow-scrolling touch
            @query window width != 0
                {
                    var height = 0.75 * window.innerHeight;
                    if (height > 650) height = 650;
                    block.css('height', height + 'px');
                }
            :click
                {
                    event.stopPropagation();
                }
            div topBar
                css
                    width 100%
                    height 15px
                    position relative
                block leftArrow
                    css
                        width 50px
                        height 100%
                        position absolute
                        top 14px
                        left 30px
                        opacity 0.5
                        transition opacity 0.2s
                        cursor pointer
                    image img
                        height 36px
                        width 46px
                        src img/arrow.png
                    :mouseover
                        css
                            opacity 0.75
                    :mouseout
                        css
                            opacity 0.5
                    :click
                        {
                            block.parent(2).on('hide');
                        }
            div contentWrap
                css
                    width 100%
                    background-color #1c1c1c
                div content
                    css
                        width 90%
                        margin 0 auto
                        padding 0
                        text-align left
                        background-color #1c1c1c
                    !title
                        init
                            {
                                return Block('div')
                                    .__add(Block('text', 1)
                                        .css({
                                            fontSize: 'inherit',
                                            // fontWeight: '800',
                                            margin: '4px 0',
                                            color: '#bbb'
                                        })
                                    )
                                    .css({
                                        borderBottom: '1px solid #C4C4C4',
                                        textAlign: 'right',
                                        padding: '0 20px 0 12px',
                                        fontSize: '25px'
                                    })
                                ;
                            }
                        load
                            {
                                data('val', function (val) {
                                    block.__child('text').html('').data(val);
                                });
                            }
                    !paragraph
                        init
                            {
                                return Block('div')
                                    .__add(Block('text', 1)
                                        .css({
                                            fontSize: '16px',
                                            color: '#999'
                                        })
                                    )
                                    .css({
                                        textAlign: 'left',
                                        padding: '0 12px 0 12px',
                                        margin: '4px 0 10px 0'
                                    })
                                ;
                            }
                        load
                            {
                                data('val', function (val) {
                                    block.__child('text').html('').data(val);
                                });
                                data('html', function (html) {
                                    block.__child('text').html(html);
                                });
                            }
                    title t1
                        val rubbr
                        css
                            font-size 35px
                    paragraph p1
                        html
                            `
                                <span style = 'font-weight: bold; font-size: 17px;'>rubbr</span> is an online multiplayer game with cars and... well basically <a href = 'http://agar.io'>agar.io</a> with cars.<br/>
                                <br/>
                                <i>Update 2018: rubbr now runs on socket.io instead of pocketjs. Play the pocketjs version </i><a href = 'http://pjs.rubbr.anuv.me/'>here</a>.
                            `
                    title t2
                        val instructions
                    paragraph p2
                        html
                            `
                                <ol style = 'margin: 0; line-height: 19px; padding-left: 12px;'>
                                    <li><b>Name</b> - type a name (alphanumeric) and hit join - you will be assigned a color</li>
                                    <li><b>Controls</b> - move the mouse around to move your car in different directions and at varying speeds
                                        <ol type = 'a'>
                                            <li>If this doesn't work, click on the grid to focus your cursor - it should turn into a crosshair</li>
                                            <li>Hit space to boost</li>
                                        </ol>
                                    </li>
                                    <li><b>Money</b> - move around and collect money, you will need this for boosts
                                        <ol type = 'a'>
                                            <li>Boosts cost $20 each</li>
                                        </ol>
                                    </li>
                                    <li><b>Health</b> - you have 100% health and if you run out, game over
                                        <ol type = 'a'>
                                            <li>If you are low on health, search for health packs (white circles with a red cross) to gain back some health</li>
                                            <li>Or just wait in the corner, your health regenerates slowly by itself</li>
                                        </ol>
                                    </li>
                                    <li><b>Rankings</b> - our place in the leaderboard (only top 5 are shown) is determined by the number of kills you have
                                        <ol type = 'a'>
                                            <li><b>Boosts</b> - To get a kill, you must boost into another player. To do so, either go through one of the nitro gates (big green hexagons) for a free boost or collect $20 and hit the space bar (every non-nitro-gate boost costs $20).</li>
                                            <li><b>Kills</b> - Once you boost into a player (who is not boosting) you will get 1 kill and they will lose 25% health, but they will become invulnerable for a couple seconds. If you boost into a player low on health and they die after your hit, you get 2 kills rather than one.</li>
                                        </ol>
                                    </li>
                                </ol>
                            `
                    title t3
                        val inspiration
                    paragraph p3
                        html
                            `
                                At an internship in 2016, kids at our workshop were obsessed with the online games <a href = 'http://agar.io'>agar.io</a>, <a href = 'http://slither.io'>slither.io</a>, and even <a href = 'http://diep.io'>diep.io</a>. So, my friend and I decided to make the "next big .io game," and decided to appeal to gamers' appreciation for crashing cars and feeling like they're gaining money. And thus, the idea for <b>rubbr</b> was born. He started making it by changing the mechanics and graphics of an agar clone, so I challenged him - I would make the entire thing from scratch. So while he finished his version in two weeks, I decided not to use an agar clone, and not even use Node.js. That summer I created <a href = 'https://github.com/anuvgupta/pocketjs'>pocketjs</a>, my own PHP WebSocket implementation. Meanwhile, we put his version on Heroku, and you can play it at <a href = 'http://rubbr.io'>rubbr.io</a> if it's still up. This summer (2017), I decided to go back and use pocketjs to make my own version of rubbr; it's a little different, but you can check it out at <a href = 'http://rubbr.anuv.me'>rubbr.anuv.me</a> to play. I'll move it to <a href = 'http://rubbr.ml'>rubbr.ml</a> if I ever get that domain back. Update: In winter 2018, I ported the game over to socket.io as an experiment.
                            `
                    title t4
                        val code
                    paragraph p4
                        html
                            `
                                <b>rubbr</b> uses JavaScript WebSockets; the WebSocket server used to use my own PHP WebSocket server library, pocketjs, but now uses socket.io.
                                The code is located on <a href = 'http://github.com/anuvgupta/rubbr' target = '_blank'>GitHub</a>.<br/><br/>
                                <b>Extermanl Resources Used</b>:<br/>
                                <ul style = 'margin: 0; line-height: 19px;'>
                                    <li><a href = 'https://jquery.com' target = '_blank'>jQuery</a> - v3.3.1 - UI manipulation</li>
                                    <li><a href = 'https://github.com/anuvgupta/block.js' target = '_blank'>block.js</a> - v3.0 - UI development and design</li>
                                    <li><a href = 'https://socket.io/' target = '_blank'>socket.io</a> - v1.1 - WebSocket server</li>
                                </ul>
                            `
                    title t5
                        val author
                    paragraph p5
                        html
                            `
                                The creator of rubbr is <span style = 'font-weight: bold; font-size: 17px;'>Anuv Gupta</span>.
                                You can check out his website at <a href = 'http://anuv.me'>anuv.me</a> and his other projects on his <a href = 'http://github.com/anuvgupta'>GitHub</a>.
                            `
